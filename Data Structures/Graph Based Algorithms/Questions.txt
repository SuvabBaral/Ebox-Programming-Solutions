1)


PROBLEM
DIJKSTRA'S ALGORITHM
Dijkstra's algorithm
 
Write a Program to implement Dijkstra's algorithm.

Input and Output Format:
Refer sample input and output.

[Note: Use %11d for formatting the output]

[All text in bold corresponds to input and the rest corresponds to output]

Sample Input and Output:

Enter the number of nodes in the graph
6
Enter the number of edges in the graph
9
Enter the start node, end node and weight of edge no 0
0 1 4
Enter the start node, end node and weight of edge no 1
0 3 6
Enter the start node, end node and weight of edge no 2
2 1 2
Enter the start node, end node and weight of edge no 3
1 3 1
Enter the start node, end node and weight of edge no 4
3 2 5
Enter the start node, end node and weight of edge no 5
0 4 100
Enter the start node, end node and weight of edge no 6
5 4 8
Enter the start node, end node and weight of edge no 7
3 5 21
Enter the start node, end node and weight of edge no 8
2 5 5
Enter the source matrix:
3
Vertex   Distance from Source
0          5
1          1
2          3
3          0
4          16
5          8



------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



2)




PROBLEM
FLOYD WARSHALL'S ALGORITHM
Floyd Warshall's algorithm
 

Write a Program to implement Floyd Warshall's algorithm.


Input and Output Format:
Refer sample input and output.

[All text in bold corresponds to input and the rest corresponds to output]

Sample Input and Output:
Enter the number of nodes in the graph
6
Enter the number of edges in the graph
9
Enter the start node, end node and weight of edge no 0
0 1 4
Enter the start node, end node and weight of edge no 1
0 3 6
Enter the start node, end node and weight of edge no 2
2 1 2
Enter the start node, end node and weight of edge no 3
1 3 1
Enter the start node, end node and weight of edge no 4
0 4 100
Enter the start node, end node and weight of edge no 5
5 4 8
Enter the start node, end node and weight of edge no 6
3 5 21
Enter the start node, end node and weight of edge no 7
2 5 5
Enter the start node, end node and weight of edge no 8
3 2 5
Following matrix shows the shortest distances between every pair of vertices
      0      4     10      5     23     15
    INF      0      6      1     19     11
    INF      2      0      3     13      5
    INF      7      5      0     18     10
    INF    INF    INF    INF      0    INF
    INF    INF    INF    INF      8      0




------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




3)



PROBLEM
PRIM'S ALGORITHM
Prim's algorithm

Write a Program to implement Prim's algorithm.

Input and Output Format:
Refer sample input and output.

[All text in bold corresponds to input and the rest corresponds to output]

Sample Input and Output :
Enter the number of vertices in the graph
5
Enter the distance matrix of the graph
0 2 0 6 0
2 0 3 8 5
0 3 0 0 7
6 8 0 0 9
0 5 7 9 0

The edges are picked in the following order
0 - 1 => 2
1 - 2 => 3
0 - 3 => 6
1 - 4 => 5



------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




4)




PROBLEM
KRUSKAL'S ALGORITHM
Kruskal's algorithm
 
Write a Program to implement Kruskal's algorithm.

Input and Output Format:
Refer sample input and output.

[All text in bold corresponds to input and the rest corresponds to output]


Sample Input and Output:
Enter the number of vertices
4
Enter the number of edges
5
Enter source, destination and weight of edge 1
0 1 10
Enter source, destination and weight of edge 2
0 2 6
Enter source, destination and weight of edge 3
0 3 5
Enter source, destination and weight of edge 4
1 3 15
Enter source, destination and weight of edge 5
2 3 4
Following are the edges in the constructed MST
Edge 2 and Edge 3 with distance 4
Edge 0 and Edge 3 with distance 5
Edge 0 and Edge 1 with distance 10



------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------